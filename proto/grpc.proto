syntax = "proto3";
package grpc;
import "google/protobuf/timestamp.proto";

//Scheduler service
service RpcService {
    rpc queryFlight (QueryFlightRequest) returns (QueryFlightResponse);
    rpc confirmItinerary (ConfirmItineraryRequest) returns (ConfirmItineraryResponse);
    rpc cancelItinerary (Id) returns (CancelItineraryResponse);
    rpc isReady (ReadyRequest) returns (ReadyResponse);
}

// QueryFlightRequest
message QueryFlightRequest {
    //is_cargo - true if cargo mission, false if people transport
    bool isCargo = 1;
    //persons - number of people for transport
    optional uint32 persons = 2;
    //weight in grams
    optional uint32 weightGrams = 3;
    //requested earliest time of departure - beginning of the time window in which we search for a flight
    google.protobuf.Timestamp earliestDepartureTime = 4;
    //requested preferred time of arrival - end of the time window in which we search for a flight
    google.protobuf.Timestamp latestArrivalTime = 5;
    //vertiport_depart_id
    string vertiport_depart_id = 6;
    //vertiport_depart_id
    string vertiport_arrive_id = 7;
}

// Confirms an itinerary by ID
message ConfirmItineraryRequest {
    // The ID of the itinerary being confirmed
    string id = 1;
    // The ID of the user confirming the itinerary
    string user_id = 2;
}

// This is replaced by the FlightPlanObject from svc_storage
//  during the build process. See build.rs
message FlightPlanObject {
    bool arbitrary = 1;
}

// Itinerary includes id, flight plan and potential deadhead flights
message Itinerary {
    // itinerary id
    string id = 1;
    //flight_plan
    repeated FlightPlanObject flight_plans = 2;
}

//QueryFlightResponse
message QueryFlightResponse {
    //array/vector of itineraries items
    repeated Itinerary itineraries = 1;
}

//ConfirmItineraryResponse
message ConfirmItineraryResponse{
    //id of the itinerary
    string id = 1;
    //indicates if confirmation was successful
    bool confirmed = 2;
    //time when the flight was confirmed
    google.protobuf.Timestamp confirmationTime = 3;
}
//CancelItineraryResponse
message CancelItineraryResponse{
    //id of the itinerary
    string id = 1;
    //indicates if cancellation was successful
    bool cancelled = 2;
    //time when the flight was cancelled
    google.protobuf.Timestamp cancellationTime = 3;
    //reason of cancellation
    string reason = 4;
}

// Identification (typically UUID)
message Id {
    // The ID of the itinerary or flight plan
    string id = 1;
}

// Ready Request
message ReadyRequest {
    // No arguments
}

// Ready Response
message ReadyResponse {
    // ready
    bool ready = 1;
}
